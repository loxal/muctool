/*
 * MUCtool Web Toolkit
 *
 * Copyright 2018 Alexander Orlov <alexander.orlov@loxal.net>. All rights reserved.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

buildscript {
    ext {
        ktor_version = "1.0.1"
    }
}
// Migrate to Kotlin https://guides.gradle.org/migrating-build-logic-from-groovy-to-kotlin/
plugins {
    id "application"
    id "idea"
    id "org.jetbrains.kotlin.jvm" version "1.3.10"
}

group = "net.loxal.muctool"
version = "1.0.0"
description = "MUCtool Web Toolkit Goodness"

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

def serverEngine = "netty" // or "jetty"

mainClassName = "io.ktor.server.${serverEngine}.DevelopmentEngine"

repositories {
    jcenter()
    maven { url "https://plugins.gradle.org/m2" }
    maven { url "https://dl.bintray.com/kotlin/ktor" }
}

compileKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_1_8
}
compileTestKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_1_8
}

task singleJar(type: Jar) {
    manifest {
        attributes(
                "Main-Class": mainClassName
        )
    }
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } } with jar
}

dependencies {
    compile("com.maxmind.geoip2:geoip2:2.12.0")
    compile("ch.qos.logback:logback-classic:1.2.3")

    compile("io.ktor:ktor-locations:$ktor_version")
    compile("io.ktor:ktor-websockets:$ktor_version")
    compile("io.ktor:ktor-server-${serverEngine}:$ktor_version")
    compile("io.ktor:ktor-gson:$ktor_version")
    compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version")
    compile("org.jetbrains.kotlin:kotlin-reflect:$kotlin_version")

    testCompile("org.jetbrains.kotlin:kotlin-test-junit5:$kotlin_version")
    testCompile("io.ktor:ktor-server-test-host:$ktor_version")
}
