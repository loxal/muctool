/*
 * MUCtool Web Toolkit
 *
 * Copyright 2018 Alexander Orlov <alexander.orlov@loxal.net>. All rights reserved.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

buildscript {
    ext {
        ktor_version = "0.9.1"
    }
}

plugins {
    id "application"
    id "idea"
    id "org.jetbrains.kotlin.jvm" version "1.2.21"
    id "io.morethan.jmhreport" version "0.7.0"
}

group = "net.loxal.muctool"
version = "1.0.0"
description = "MUCtool Web Toolkit Goodness"

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

String serverEngine = "netty" // or "jetty"

mainClassName = "io.ktor.server.${serverEngine}.DevelopmentEngine"

repositories {
    jcenter()
    maven { url "https://plugins.gradle.org/m2" }
    maven { url "https://dl.bintray.com/kotlin/ktor" }
    maven { url "https://dl.bintray.com/kotlin/kotlinx" }
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

task singleJar(type: Jar) {
    manifest {
        attributes(
                "Main-Class": mainClassName
        )
    }
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } } with jar
}

jmhReport {
    jmhResultPath = project.file("$buildDir/jmh-result.json")
    jmhReportOutput = project.file(buildDir)
}
task runJMH(type: JavaExec) {
    main = "net.loxal.muctool.jmh.LoadBenchmark"
    classpath sourceSets.test.runtimeClasspath
}
tasks.runJMH.finalizedBy tasks.jmhReport

processResources {
    from(sourceSets.main.resources.srcDirs) {
        include "application.conf"
        expand(
                "password": project.properties["password"] ?: ""
        )
    }
}

dependencies {
    compile "com.squareup.okhttp3:okhttp:3.9.1"
    compile "com.maxmind.geoip2:geoip2:2.11.0"
    compile "ch.qos.logback:logback-classic:1.2.3"

    compile "io.ktor:ktor-locations:$ktor_version"
    compile "io.ktor:ktor-server-${serverEngine}:$ktor_version"
    compile "io.ktor:ktor-gson:$ktor_version"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    testCompile "org.openjdk.jmh:jmh-generator-annprocess:1.20"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testCompile "io.ktor:ktor-server-test-host:$ktor_version"
}
